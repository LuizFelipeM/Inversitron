export const controller = "import { controller, AbstractController, inject } from 'inversitron'\r\nimport { Post } from '../domain/entities/Post'\r\nimport { PostService } from '../services/PostService'\r\n\r\n@controller('/post')\r\nexport class ExampleController extends AbstractController<Post, PostService> {\r\n  constructor (\r\n    @inject(PostService)\r\n    protected readonly postService: PostService\r\n  ) { super(postService) }\r\n}"
export const entity = "import { Entity, Column, BaseEntity } from 'inversitron'\r\n\r\n@Entity()\r\nexport class Post extends BaseEntity {\r\n  @Column({ length: 100 })\r\n  name: string\r\n}"
export const repository = "import { AbstractRepository } from 'inversitron'\r\nimport { Post } from '../domain/entities/Post'\r\n\r\nexport class PostRepository extends AbstractRepository<Post> {\r\n  constructor () {\r\n    super(Post)\r\n  }\r\n}"
export const service = "import { AbstractService, inject } from 'inversitron'\r\nimport { PostRepository } from '../repositories/PostRepository'\r\nimport { Post } from '../domain/entities/Post'\r\n\r\nexport class PostService extends AbstractService<Post, PostRepository> {\r\n  constructor (\r\n    @inject(PostRepository)\r\n    protected readonly postRepository: PostRepository\r\n  ) { super(postRepository) }\r\n}"
export const index = "import 'reflect-metadata'\r\nimport import { ignition } from 'inversitron'\r\n\r\nignition.then(() => console.log('Server started'))"
